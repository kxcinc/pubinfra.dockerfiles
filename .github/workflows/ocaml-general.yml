name: OCaml-General
on:
  push:
    paths:
      - 'ocaml-general/**'
      - '!ocaml-general/README.md'
      - '.github/workflows/ocaml-general.yml'
    branches: [main]

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'ocaml-general/**'
      - '!ocaml-general/README.md'
      - '.github/workflows/ocaml-general.yml'

jobs:
  validate-ocaml-general:
    strategy:
      matrix:
        ocaml-version:
          - 4.13.1
        arch:
          - amd64
          # - arm64 # it's taking too long for the purpose of validation
        node-version:
          - hydrogen # v18 Active LTS
        os:
          - ubuntu.22.04
    env:
      DOCKER_TAG: ${{ matrix.os }}-ocaml.${{ matrix.ocaml-version }}-node.${{ matrix.node-version }}-${{ matrix.arch }}
      CACHE_DIR: /tmp/docker-cache

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU for arm64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - run: mkdir -p ${{ env.CACHE_DIR }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ env.DOCKER_TAG }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ env.DOCKER_TAG }}
            ${{ runner.os }}-buildx-${{ matrix.arch }}-

      - name: Validation Docker Build (${{ env.DOCKER_TAG }})
        uses: docker/build-push-action@v4
        with:
          context: ocaml-general
          push: false
          platforms: linux/${{ matrix.arch }}
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}
            OCAML_VERSION=${{ matrix.ocaml-version }}
          cache-from: type=local,src=${{ env.CACHE_DIR }}/.buildx-cache
          cache-to: type=local,dest=${{ env.CACHE_DIR }}/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          cd ${{ env.CACHE_DIR }}
          rm -rf .buildx-cache
          mv .buildx-cache-new .buildx-cache

  build-deploy-ocaml-general:
    needs: validate-ocaml-general
    strategy:
      matrix:
        ocaml-version:
          - 4.12.1
          - 4.13.1
          - 4.14.1
          # OCaml 5.x is not supported yet
          # - 5.0.0
        arch:
          - amd64
          - arm64
        node-version:
          - fermium # v14 Maintenance LTS
          - gallium # v16 Active LTS
          - hydrogen # v18 Active LTS
          - latest
        os:
          - ubuntu.22.04
    env:
      DOCKER_TAG: ${{ matrix.os }}-ocaml.${{ matrix.ocaml-version }}-node.${{ matrix.node-version }}-${{ matrix.arch }}
      CACHE_DIR: /tmp/docker-cache

    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU for arm64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - run: mkdir -p ${{ env.CACHE_DIR }}

      - name: Restore Docker Layers Cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ env.DOCKER_TAG }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ env.DOCKER_TAG }}
            ${{ runner.os }}-buildx-${{ matrix.arch }}-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image (${{ env.DOCKER_TAG }})
        uses: docker/build-push-action@v4
        with:
          context: ocaml-general
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: linux/${{ matrix.arch }}
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}
            OCAML_VERSION=${{ matrix.ocaml-version }}
          tags: "ghcr.io/kxcteam/ocaml-general:${{ env.DOCKER_TAG }},ghcr.io/kxcteam/ocaml-general:${{ env.DOCKER_TAG }}-${{ github.sha }}"
          cache-from: type=local,src=${{ env.CACHE_DIR }}/.buildx-cache
          cache-to: type=local,dest=${{ env.CACHE_DIR }}/.buildx-cache-new,mode=max

      - name: Build and push image (OCaml ${{ matrix.ocaml-version }})
        if: ${{ matrix.node-version == 'hydrogen' && matrix.arch == 'amd64' }}
        uses: docker/build-push-action@v4
        with:
          context: ocaml-general
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: linux/${{ matrix.arch }}
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}
            OCAML_VERSION=${{ matrix.ocaml-version }}
          tags: "ghcr.io/kxcteam/ocaml-general:${{ matrix.ocaml-version }},ghcr.io/kxcteam/ocaml-general:${{ matrix.ocaml-version }}-${{ github.sha }}"
          cache-from: type=local,src=${{ env.CACHE_DIR }}/.buildx-cache-new

      - name: Store Docker Layers Cache
        if: ${{ matrix.ocaml-version == '4.13.1' && matrix.node-version == 'hydrogen' }}
        uses: actions/cache/save@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ env.DOCKER_TAG }}-${{ github.sha }}

      - name: Move cache
        run: |
          cd ${{ env.CACHE_DIR }}
          rm -rf .buildx-cache
          mv .buildx-cache-new .buildx-cache
